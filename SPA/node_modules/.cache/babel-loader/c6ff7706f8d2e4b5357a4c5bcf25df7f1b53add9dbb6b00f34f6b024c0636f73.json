{"ast":null,"code":"/*! @azure/msal-common v8.0.0 2022-11-07 */\n'use strict';\n\nimport { AUTHORITY_METADATA_CONSTANTS } from '../../utils/Constants.js';\nimport { TimeUtils } from '../../utils/TimeUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar AuthorityMetadataEntity = /** @class */function () {\n  function AuthorityMetadataEntity() {\n    this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n  }\n  /**\r\n   * Update the entity with new aliases, preferred_cache and preferred_network values\r\n   * @param metadata\r\n   * @param fromNetwork\r\n   */\n  AuthorityMetadataEntity.prototype.updateCloudDiscoveryMetadata = function (metadata, fromNetwork) {\n    this.aliases = metadata.aliases;\n    this.preferred_cache = metadata.preferred_cache;\n    this.preferred_network = metadata.preferred_network;\n    this.aliasesFromNetwork = fromNetwork;\n  };\n  /**\r\n   * Update the entity with new endpoints\r\n   * @param metadata\r\n   * @param fromNetwork\r\n   */\n  AuthorityMetadataEntity.prototype.updateEndpointMetadata = function (metadata, fromNetwork) {\n    this.authorization_endpoint = metadata.authorization_endpoint;\n    this.token_endpoint = metadata.token_endpoint;\n    this.end_session_endpoint = metadata.end_session_endpoint;\n    this.issuer = metadata.issuer;\n    this.endpointsFromNetwork = fromNetwork;\n    this.jwks_uri = metadata.jwks_uri;\n  };\n  /**\r\n   * Save the authority that was used to create this cache entry\r\n   * @param authority\r\n   */\n  AuthorityMetadataEntity.prototype.updateCanonicalAuthority = function (authority) {\n    this.canonical_authority = authority;\n  };\n  /**\r\n   * Reset the exiresAt value\r\n   */\n  AuthorityMetadataEntity.prototype.resetExpiresAt = function () {\n    this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n  };\n  /**\r\n   * Returns whether or not the data needs to be refreshed\r\n   */\n  AuthorityMetadataEntity.prototype.isExpired = function () {\n    return this.expiresAt <= TimeUtils.nowSeconds();\n  };\n  /**\r\n   * Validates an entity: checks for all expected params\r\n   * @param entity\r\n   */\n  AuthorityMetadataEntity.isAuthorityMetadataEntity = function (key, entity) {\n    if (!entity) {\n      return false;\n    }\n    return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 && entity.hasOwnProperty(\"aliases\") && entity.hasOwnProperty(\"preferred_cache\") && entity.hasOwnProperty(\"preferred_network\") && entity.hasOwnProperty(\"canonical_authority\") && entity.hasOwnProperty(\"authorization_endpoint\") && entity.hasOwnProperty(\"token_endpoint\") && entity.hasOwnProperty(\"issuer\") && entity.hasOwnProperty(\"aliasesFromNetwork\") && entity.hasOwnProperty(\"endpointsFromNetwork\") && entity.hasOwnProperty(\"expiresAt\") && entity.hasOwnProperty(\"jwks_uri\");\n  };\n  return AuthorityMetadataEntity;\n}();\nexport { AuthorityMetadataEntity };","map":{"version":3,"mappings":";;;;;;AAAA;;;AAGG;AAOH;EAcI;IACI,IAAI,CAACA,SAAS,GAAGC,SAAS,CAACC,UAAU,EAAE,GAAGC,4BAA4B,CAACC,oBAAoB;;EAG/F;;;;AAIG;EACHC,8DAA4B,GAA5B,UAA6BC,QAAgC,EAAEC,WAAoB;IAC/E,IAAI,CAACC,OAAO,GAAGF,QAAQ,CAACE,OAAO;IAC/B,IAAI,CAACC,eAAe,GAAGH,QAAQ,CAACG,eAAe;IAC/C,IAAI,CAACC,iBAAiB,GAAGJ,QAAQ,CAACI,iBAAiB;IACnD,IAAI,CAACC,kBAAkB,GAAGJ,WAAW;GACxC;EAED;;;;AAIG;EACHF,wDAAsB,GAAtB,UAAuBC,QAA8B,EAAEC,WAAoB;IACvE,IAAI,CAACK,sBAAsB,GAAGN,QAAQ,CAACM,sBAAsB;IAC7D,IAAI,CAACC,cAAc,GAAGP,QAAQ,CAACO,cAAc;IAC7C,IAAI,CAACC,oBAAoB,GAAGR,QAAQ,CAACQ,oBAAoB;IACzD,IAAI,CAACC,MAAM,GAAGT,QAAQ,CAACS,MAAM;IAC7B,IAAI,CAACC,oBAAoB,GAAGT,WAAW;IACvC,IAAI,CAACU,QAAQ,GAAGX,QAAQ,CAACW,QAAQ;GACpC;EAED;;;AAGG;EACHZ,uBAAwB,sCAAxB,UAAyBa,SAAiB;IACtC,IAAI,CAACC,mBAAmB,GAAGD,SAAS;GACvC;EAED;;AAEG;EACHb,gDAAc,GAAd;IACI,IAAI,CAACL,SAAS,GAAGC,SAAS,CAACC,UAAU,EAAE,GAAGC,4BAA4B,CAACC,oBAAoB;GAC9F;EAED;;AAEG;EACHC,2CAAS,GAAT;IACI,OAAO,IAAI,CAACL,SAAS,IAAIC,SAAS,CAACC,UAAU,EAAE;GAClD;EAED;;;AAGG;EACIG,iDAAyB,GAAhC,UAAiCe,GAAW,EAAEC,MAAc;IAExD,IAAI,CAACA,MAAM,EAAE;MACT,OAAO,KAAK;IACf;IAED,OACID,GAAG,CAACE,OAAO,CAACnB,4BAA4B,CAACoB,SAAS,CAAC,KAAK,CAAC,IACzDF,MAAM,CAACG,cAAc,CAAC,SAAS,CAAC,IAChCH,MAAM,CAACG,cAAc,CAAC,iBAAiB,CAAC,IACxCH,MAAM,CAACG,cAAc,CAAC,mBAAmB,CAAC,IAC1CH,MAAM,CAACG,cAAc,CAAC,qBAAqB,CAAC,IAC5CH,MAAM,CAACG,cAAc,CAAC,wBAAwB,CAAC,IAC/CH,MAAM,CAACG,cAAc,CAAC,gBAAgB,CAAC,IACvCH,MAAM,CAACG,cAAc,CAAC,QAAQ,CAAC,IAC/BH,MAAM,CAACG,cAAc,CAAC,oBAAoB,CAAC,IAC3CH,MAAM,CAACG,cAAc,CAAC,sBAAsB,CAAC,IAC7CH,MAAM,CAACG,cAAc,CAAC,WAAW,CAAC,IAClCH,MAAM,CAACG,cAAc,CAAC,UAAU,CAAC;GAExC;EACL,OAACnB;AAAD,CAAC","names":["expiresAt","TimeUtils","nowSeconds","AUTHORITY_METADATA_CONSTANTS","REFRESH_TIME_SECONDS","AuthorityMetadataEntity","metadata","fromNetwork","aliases","preferred_cache","preferred_network","aliasesFromNetwork","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","endpointsFromNetwork","jwks_uri","authority","canonical_authority","key","entity","indexOf","CACHE_KEY","hasOwnProperty"],"sources":["C:\\Azure\\gitauthdemo\\ms-identity-javascript-react-tutorial\\3-Authorization-II\\2-call-api-b2c\\SPA\\node_modules\\@azure\\msal-common\\src\\cache\\entities\\AuthorityMetadataEntity.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport { AUTHORITY_METADATA_CONSTANTS } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\n\nexport class AuthorityMetadataEntity {\n    aliases: Array<string>;\n    preferred_cache: string;\n    preferred_network: string;\n    canonical_authority: string;\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    aliasesFromNetwork: boolean;\n    endpointsFromNetwork: boolean;\n    expiresAt: number;\n    jwks_uri: string;\n\n    constructor() {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateCloudDiscoveryMetadata(metadata: CloudDiscoveryMetadata, fromNetwork: boolean): void {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Update the entity with new endpoints\n     * @param metadata \n     * @param fromNetwork \n     */\n    updateEndpointMetadata(metadata: OpenIdConfigResponse, fromNetwork: boolean): void {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority \n     */\n    updateCanonicalAuthority(authority: string): void {\n        this.canonical_authority = authority;\n    }\n\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt(): void {\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired(): boolean {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key: string, entity: object): boolean {\n\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\")\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}