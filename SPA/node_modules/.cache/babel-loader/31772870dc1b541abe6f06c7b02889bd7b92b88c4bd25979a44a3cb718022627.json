{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { InteractionType } from '@azure/msal-browser';\nimport { useMsal, useMsalAuthentication } from \"@azure/msal-react\";\n\n/**\r\n * Custom hook to call a web API using bearer token obtained from MSAL\r\n * @param {PopupRequest} msalRequest \r\n * @returns \r\n */\nconst useFetchWithMsal = msalRequest => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const {\n    result,\n    error: msalError\n  } = useMsalAuthentication(InteractionType.Popup, {\n    ...msalRequest,\n    account: instance.getActiveAccount(),\n    redirectUri: '/redirect'\n  });\n\n  /**\r\n   * Execute a fetch request with the given options\r\n   * @param {string} method: GET, POST, PUT, DELETE\r\n   * @param {String} endpoint: The endpoint to call\r\n   * @param {Object} data: The data to send to the endpoint, if any \r\n   * @returns JSON response\r\n   */\n  const execute = async function (method, endpoint) {\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    if (msalError) {\n      setError(msalError);\n      return;\n    }\n    if (result) {\n      try {\n        let response = null;\n        const headers = new Headers();\n        const bearer = `Bearer ${result.accessToken}`;\n        headers.append(\"Authorization\", bearer);\n        if (data) headers.append('Content-Type', 'application/json');\n        let options = {\n          method: method,\n          headers: headers,\n          body: data ? JSON.stringify(data) : null\n        };\n        setIsLoading(true);\n        response = await (await fetch(endpoint, options)).json();\n        setData(response);\n        setIsLoading(false);\n        return response;\n      } catch (e) {\n        setError(e);\n        setIsLoading(false);\n        throw e;\n      }\n    }\n  };\n  return {\n    isLoading,\n    error,\n    data,\n    execute: useCallback(execute, [result, msalError]) // to avoid infinite calls when inside a `useEffect`\n  };\n};\n_s(useFetchWithMsal, \"52mvK6olDHKRY0TW8U3W0FnltHM=\", false, function () {\n  return [useMsal, useMsalAuthentication];\n});\nexport default useFetchWithMsal;","map":{"version":3,"names":["useState","useCallback","InteractionType","useMsal","useMsalAuthentication","useFetchWithMsal","msalRequest","instance","isLoading","setIsLoading","error","setError","data","setData","result","msalError","Popup","account","getActiveAccount","redirectUri","execute","method","endpoint","response","headers","Headers","bearer","accessToken","append","options","body","JSON","stringify","fetch","json","e"],"sources":["C:/Azure/gitauthdemo/ms-identity-javascript-react-tutorial/3-Authorization-II/2-call-api-b2c/SPA/src/hooks/useFetchWithMsal.jsx"],"sourcesContent":["import {\r\n    useState,\r\n    useCallback,\r\n} from 'react';\r\n\r\nimport { InteractionType } from '@azure/msal-browser';\r\nimport { useMsal, useMsalAuthentication } from \"@azure/msal-react\";\r\n\r\n/**\r\n * Custom hook to call a web API using bearer token obtained from MSAL\r\n * @param {PopupRequest} msalRequest \r\n * @returns \r\n */\r\nconst useFetchWithMsal = (msalRequest) => {\r\n    const { instance } = useMsal();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [data, setData] = useState(null);\r\n\r\n    const { result, error: msalError } = useMsalAuthentication(InteractionType.Popup, {\r\n        ...msalRequest,\r\n        account: instance.getActiveAccount(),\r\n        redirectUri: '/redirect'\r\n    });\r\n\r\n    /**\r\n     * Execute a fetch request with the given options\r\n     * @param {string} method: GET, POST, PUT, DELETE\r\n     * @param {String} endpoint: The endpoint to call\r\n     * @param {Object} data: The data to send to the endpoint, if any \r\n     * @returns JSON response\r\n     */\r\n    const execute = async (method, endpoint, data = null) => {\r\n        if (msalError) {\r\n            setError(msalError);\r\n            return;\r\n        }\r\n\r\n        if (result) {\r\n            try {\r\n                let response = null;\r\n\r\n                const headers = new Headers();\r\n                const bearer = `Bearer ${result.accessToken}`;            \r\n                headers.append(\"Authorization\", bearer);\r\n\r\n                if (data) headers.append('Content-Type', 'application/json');\r\n\r\n                let options = {\r\n                    method: method,\r\n                    headers: headers,\r\n                    body: data ? JSON.stringify(data) : null,\r\n                };\r\n\r\n                setIsLoading(true);\r\n\r\n                response = await (await fetch(endpoint, options)).json();\r\n                setData(response);\r\n\r\n                setIsLoading(false);\r\n                return response;\r\n            } catch (e) {\r\n                setError(e);\r\n                setIsLoading(false);\r\n                throw e;\r\n            }\r\n        }\r\n    };\r\n\r\n    return {\r\n        isLoading,\r\n        error,\r\n        data,\r\n        execute: useCallback(execute, [result, msalError]), // to avoid infinite calls when inside a `useEffect`\r\n    };\r\n};\r\n\r\nexport default useFetchWithMsal;"],"mappings":";AAAA,SACIA,QAAQ,EACRC,WAAW,QACR,OAAO;AAEd,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,OAAO,EAAEC,qBAAqB,QAAQ,mBAAmB;;AAElE;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAIC,WAAW,IAAK;EAAA;EACtC,MAAM;IAAEC;EAAS,CAAC,GAAGJ,OAAO,EAAE;EAC9B,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAM;IAAEc,MAAM;IAAEJ,KAAK,EAAEK;EAAU,CAAC,GAAGX,qBAAqB,CAACF,eAAe,CAACc,KAAK,EAAE;IAC9E,GAAGV,WAAW;IACdW,OAAO,EAAEV,QAAQ,CAACW,gBAAgB,EAAE;IACpCC,WAAW,EAAE;EACjB,CAAC,CAAC;;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAMC,OAAO,GAAG,gBAAOC,MAAM,EAAEC,QAAQ,EAAkB;IAAA,IAAhBV,IAAI,uEAAG,IAAI;IAChD,IAAIG,SAAS,EAAE;MACXJ,QAAQ,CAACI,SAAS,CAAC;MACnB;IACJ;IAEA,IAAID,MAAM,EAAE;MACR,IAAI;QACA,IAAIS,QAAQ,GAAG,IAAI;QAEnB,MAAMC,OAAO,GAAG,IAAIC,OAAO,EAAE;QAC7B,MAAMC,MAAM,GAAI,UAASZ,MAAM,CAACa,WAAY,EAAC;QAC7CH,OAAO,CAACI,MAAM,CAAC,eAAe,EAAEF,MAAM,CAAC;QAEvC,IAAId,IAAI,EAAEY,OAAO,CAACI,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;QAE5D,IAAIC,OAAO,GAAG;UACVR,MAAM,EAAEA,MAAM;UACdG,OAAO,EAAEA,OAAO;UAChBM,IAAI,EAAElB,IAAI,GAAGmB,IAAI,CAACC,SAAS,CAACpB,IAAI,CAAC,GAAG;QACxC,CAAC;QAEDH,YAAY,CAAC,IAAI,CAAC;QAElBc,QAAQ,GAAG,MAAM,CAAC,MAAMU,KAAK,CAACX,QAAQ,EAAEO,OAAO,CAAC,EAAEK,IAAI,EAAE;QACxDrB,OAAO,CAACU,QAAQ,CAAC;QAEjBd,YAAY,CAAC,KAAK,CAAC;QACnB,OAAOc,QAAQ;MACnB,CAAC,CAAC,OAAOY,CAAC,EAAE;QACRxB,QAAQ,CAACwB,CAAC,CAAC;QACX1B,YAAY,CAAC,KAAK,CAAC;QACnB,MAAM0B,CAAC;MACX;IACJ;EACJ,CAAC;EAED,OAAO;IACH3B,SAAS;IACTE,KAAK;IACLE,IAAI;IACJQ,OAAO,EAAEnB,WAAW,CAACmB,OAAO,EAAE,CAACN,MAAM,EAAEC,SAAS,CAAC,CAAC,CAAE;EACxD,CAAC;AACL,CAAC;AAAC,GA9DIV,gBAAgB;EAAA,QACGF,OAAO,EAKSC,qBAAqB;AAAA;AA0D9D,eAAeC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}