{"ast":null,"code":"var _jsxFileName = \"C:\\\\Azure\\\\gitauthdemo\\\\ms-identity-javascript-react-tutorial\\\\3-Authorization-II\\\\2-call-api-b2c\\\\SPA\\\\src\\\\components\\\\ListView.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useMsal } from \"@azure/msal-react\";\nimport { nanoid } from \"nanoid\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { TodoForm } from \"./TodoForm\";\nimport { TodoItem } from \"./TodoItem\";\nimport useFetchWithMsal from '../hooks/useFetchWithMsal';\nimport { protectedResources } from \"../authConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction usePrevious(value) {\n  _s();\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n_s(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\nexport const ListView = props => {\n  _s2();\n  const {\n    instance\n  } = useMsal();\n  const account = instance.getActiveAccount();\n  const {\n    error,\n    execute\n  } = useFetchWithMsal({\n    scopes: protectedResources.apiTodoList.scopes.write\n  });\n  const [tasks, setTasks] = useState(props.todoListData);\n  const handleCompleteTask = id => {\n    const updatedTask = tasks.find(task => id === task.id);\n    updatedTask.completed = !updatedTask.completed;\n    execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\n      const updatedTasks = tasks.map(task => {\n        if (id === task.id) {\n          return {\n            ...task,\n            completed: !task.completed\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n    });\n  };\n  const handleAddTask = name => {\n    var _account$idTokenClaim;\n    const newTask = {\n      owner: (_account$idTokenClaim = account.idTokenClaims) === null || _account$idTokenClaim === void 0 ? void 0 : _account$idTokenClaim.sub,\n      id: nanoid(),\n      name: name,\n      completed: false\n    };\n    execute(\"POST\", protectedResources.apiTodoList.endpoint, newTask).then(response => {\n      if (response && response.message === \"success\") {\n        setTasks([...tasks, newTask]);\n      }\n    });\n  };\n  const handleDeleteTask = id => {\n    execute(\"DELETE\", protectedResources.apiTodoList.endpoint + `/${id}`).then(response => {\n      if (response && response.message === \"success\") {\n        const remainingTasks = tasks.filter(task => id !== task.id);\n        setTasks(remainingTasks);\n      }\n    });\n  };\n  const handleEditTask = (id, newName) => {\n    const updatedTask = tasks.find(task => id === task.id);\n    updatedTask.name = newName;\n    execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\n      const updatedTasks = tasks.map(task => {\n        if (id === task.id) {\n          return {\n            ...task,\n            name: newName\n          };\n        }\n        return task;\n      });\n      setTasks(updatedTasks);\n    });\n  };\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    completeTask: handleCompleteTask,\n    deleteTask: handleDeleteTask,\n    editTask: handleEditTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this));\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-area-div\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      addTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      tabIndex: \"-1\",\n      ref: listHeadingRef,\n      children: \"testing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"todo-list\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s2(ListView, \"r1Dr12qP1trth1oag1RxsNqyyyM=\", false, function () {\n  return [useMsal, useFetchWithMsal, usePrevious];\n});\n_c = ListView;\nvar _c;\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useMsal","nanoid","ListGroup","TodoForm","TodoItem","useFetchWithMsal","protectedResources","usePrevious","value","ref","current","ListView","props","instance","account","getActiveAccount","error","execute","scopes","apiTodoList","write","tasks","setTasks","todoListData","handleCompleteTask","id","updatedTask","find","task","completed","endpoint","then","updatedTasks","map","handleAddTask","name","newTask","owner","idTokenClaims","sub","response","message","handleDeleteTask","remainingTasks","filter","handleEditTask","newName","taskList","listHeadingRef","prevTaskLength","length","focus"],"sources":["C:/Azure/gitauthdemo/ms-identity-javascript-react-tutorial/3-Authorization-II/2-call-api-b2c/SPA/src/components/ListView.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useMsal } from \"@azure/msal-react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nimport { TodoForm } from \"./TodoForm\";\r\nimport { TodoItem } from \"./TodoItem\";\r\n\r\nimport useFetchWithMsal from '../hooks/useFetchWithMsal';\r\nimport { protectedResources } from \"../authConfig\";\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n\r\n    return ref.current;\r\n}\r\n\r\nexport const ListView = (props) => {\r\n    const { instance } = useMsal();\r\n    const account = instance.getActiveAccount();\r\n\r\n    const { error, execute } = useFetchWithMsal({\r\n        scopes: protectedResources.apiTodoList.scopes.write\r\n    });\r\n\r\n    const [tasks, setTasks] = useState(props.todoListData);\r\n\r\n    const handleCompleteTask = (id) => {\r\n        const updatedTask = tasks.find(task => id === task.id);\r\n        updatedTask.completed = !updatedTask.completed;\r\n\r\n        execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\r\n            const updatedTasks = tasks.map(task => {\r\n                if (id === task.id) {\r\n                    return { ...task, completed: !task.completed }\r\n                }\r\n                return task;\r\n            });\r\n            setTasks(updatedTasks);\r\n        });\r\n    }\r\n\r\n    const handleAddTask = (name) => {\r\n        const newTask = {\r\n            owner: account.idTokenClaims?.sub,\r\n            id: nanoid(),\r\n            name: name,\r\n            completed: false\r\n        };\r\n\r\n        execute(\"POST\", protectedResources.apiTodoList.endpoint, newTask).then((response) => {\r\n            if (response && response.message === \"success\") {\r\n                setTasks([...tasks, newTask]);\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDeleteTask = (id) => {\r\n        execute(\"DELETE\", protectedResources.apiTodoList.endpoint + `/${id}`).then((response) => {\r\n            if (response && response.message === \"success\") {\r\n                const remainingTasks = tasks.filter(task => id !== task.id);\r\n                setTasks(remainingTasks);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleEditTask = (id, newName) => {\r\n        const updatedTask = tasks.find(task => id === task.id);\r\n        updatedTask.name = newName;\r\n\r\n        execute(\"PUT\", protectedResources.apiTodoList.endpoint + `/${id}`, updatedTask).then(() => {\r\n            const updatedTasks = tasks.map(task => {\r\n                if (id === task.id) {\r\n                    return { ...task, name: newName }\r\n                }\r\n                return task;\r\n            });\r\n            setTasks(updatedTasks);\r\n        });\r\n    }\r\n\r\n    const taskList = tasks.map(task => (\r\n        <TodoItem\r\n            id={task.id}\r\n            name={task.name}\r\n            completed={task.completed}\r\n            key={task.id}\r\n            completeTask={handleCompleteTask}\r\n            deleteTask={handleDeleteTask}\r\n            editTask={handleEditTask}\r\n        />\r\n    ));\r\n\r\n    const listHeadingRef = useRef(null);\r\n    const prevTaskLength = usePrevious(tasks.length);\r\n\r\n    useEffect(() => {\r\n        if (tasks.length - prevTaskLength === -1) {\r\n            listHeadingRef.current.focus();\r\n        }\r\n    }, [tasks.length, prevTaskLength]);\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"data-area-div\">\r\n            <TodoForm addTask={handleAddTask} />\r\n            <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>testing</h2>\r\n            <ListGroup className=\"todo-list\">\r\n                {taskList}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}