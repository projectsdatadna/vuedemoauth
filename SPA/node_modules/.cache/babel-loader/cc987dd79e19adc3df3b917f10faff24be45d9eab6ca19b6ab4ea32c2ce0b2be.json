{"ast":null,"code":"/*! @azure/msal-browser v2.31.0 2022-11-07 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar BrowserPerformanceMeasurement = /** @class */function () {\n  function BrowserPerformanceMeasurement(name, correlationId) {\n    this.correlationId = correlationId;\n    this.measureName = \"msal.measure.\" + name + \".\" + this.correlationId;\n    this.startMark = \"msal.start.\" + name + \".\" + this.correlationId;\n    this.endMark = \"msal.end.\" + name + \".\" + this.correlationId;\n  }\n  BrowserPerformanceMeasurement.supportsBrowserPerformance = function () {\n    return typeof window !== \"undefined\" && typeof window.performance !== \"undefined\" && typeof window.performance.mark === \"function\" && typeof window.performance.measure === \"function\" && typeof window.performance.clearMarks === \"function\" && typeof window.performance.clearMeasures === \"function\" && typeof window.performance.getEntriesByName === \"function\";\n  };\n  BrowserPerformanceMeasurement.prototype.startMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.startMark);\n      } catch (e) {\n        // Silently catch\n      }\n    }\n  };\n  BrowserPerformanceMeasurement.prototype.endMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        window.performance.mark(this.endMark);\n        window.performance.measure(this.measureName, this.startMark, this.endMark);\n      } catch (e) {\n        // Silently catch\n      }\n    }\n  };\n  BrowserPerformanceMeasurement.prototype.flushMeasurement = function () {\n    if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n      try {\n        var entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n        if (entriesForMeasurement.length > 0) {\n          var durationMs = entriesForMeasurement[0].duration;\n          window.performance.clearMeasures(this.measureName);\n          window.performance.clearMarks(this.startMark);\n          window.performance.clearMarks(this.endMark);\n          return durationMs;\n        }\n      } catch (e) {\n        // Silently catch and return null\n      }\n    }\n    return null;\n  };\n  return BrowserPerformanceMeasurement;\n}();\nexport { BrowserPerformanceMeasurement };","map":{"version":3,"mappings":";;;AAAA;;;;;EAaI,uCAAYA,IAAY,EAAEC,aAAqB;IAC3C,IAAI,CAACA,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,WAAW,GAAG,kBAAgBF,IAAI,SAAI,IAAI,CAACC,aAAe;IAC/D,IAAI,CAACE,SAAS,GAAG,gBAAcH,IAAI,SAAI,IAAI,CAACC,aAAe;IAC3D,IAAI,CAACG,OAAO,GAAG,cAAYJ,IAAI,SAAI,IAAI,CAACC,aAAe;;EAGpDI,wDAA0B,GAAjC;IACI,OAAO,OAAOC,MAAM,KAAK,WAAW,IAChC,OAAOA,MAAM,CAACC,WAAW,KAAK,WAAW,IACzC,OAAOD,MAAM,CAACC,WAAW,CAACC,IAAI,KAAK,UAAU,IAC7C,OAAOF,MAAM,CAACC,WAAW,CAACE,OAAO,KAAK,UAAU,IAChD,OAAOH,MAAM,CAACC,WAAW,CAACG,UAAU,KAAK,UAAU,IACnD,OAAOJ,MAAM,CAACC,WAAW,CAACI,aAAa,KAAK,UAAU,IACtD,OAAOL,MAAM,CAACC,WAAW,CAACK,gBAAgB,KAAK,UAAU;GAChE;EAEDP,wDAAgB,GAAhB;IACI,IAAIA,6BAA6B,CAACQ,0BAA0B,EAAE,EAAE;MAC5D,IAAI;QACAP,MAAM,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAACL,SAAS,CAAC;OAC1C,CAAC,OAAOW,CAAC,EAAE;;;;GAInB;EAEDT,sDAAc,GAAd;IACI,IAAIA,6BAA6B,CAACQ,0BAA0B,EAAE,EAAE;MAC5D,IAAI;QACAP,MAAM,CAACC,WAAW,CAACC,IAAI,CAAC,IAAI,CAACJ,OAAO,CAAC;QACrCE,MAAM,CAACC,WAAW,CAACE,OAAO,CAAC,IAAI,CAACP,WAAW,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,OAAO,CAAC;OAC7E,CAAC,OAAOU,CAAC,EAAE;;;;GAInB;EAEDT,wDAAgB,GAAhB;IACI,IAAIA,6BAA6B,CAACQ,0BAA0B,EAAE,EAAE;MAC5D,IAAI;QACA,IAAME,qBAAqB,GAAGT,MAAM,CAACC,WAAW,CAACK,gBAAgB,CAAC,IAAI,CAACV,WAAW,EAAE,SAAS,CAAC;QAC9F,IAAIa,qBAAqB,CAACC,MAAM,GAAG,CAAC,EAAE;UAClC,IAAMC,UAAU,GAAGF,qBAAqB,CAAC,CAAC,CAAC,CAACG,QAAQ;UACpDZ,MAAM,CAACC,WAAW,CAACI,aAAa,CAAC,IAAI,CAACT,WAAW,CAAC;UAClDI,MAAM,CAACC,WAAW,CAACG,UAAU,CAAC,IAAI,CAACP,SAAS,CAAC;UAC7CG,MAAM,CAACC,WAAW,CAACG,UAAU,CAAC,IAAI,CAACN,OAAO,CAAC;UAC3C,OAAOa,UAAU;;OAExB,CAAC,OAAOH,CAAC,EAAE;;;;IAIhB,OAAO,IAAI;GACd;EACL,oCAAC;AAAD,CAAC","names":["name","correlationId","measureName","startMark","endMark","BrowserPerformanceMeasurement","window","performance","mark","measure","clearMarks","clearMeasures","getEntriesByName","supportsBrowserPerformance","e","entriesForMeasurement","length","durationMs","duration"],"sources":["C:\\Azure\\gitauthdemo\\ms-identity-javascript-react-tutorial\\3-Authorization-II\\2-call-api-b2c\\SPA\\node_modules\\@azure\\msal-browser\\src\\telemetry\\BrowserPerformanceMeasurement.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IPerformanceMeasurement } from \"@azure/msal-common\";\n\nexport class BrowserPerformanceMeasurement implements IPerformanceMeasurement {\n    private measureName: string;\n    private correlationId: string;\n    private startMark: string;\n    private endMark: string;\n\n    constructor(name: string, correlationId: string) {\n        this.correlationId = correlationId;\n        this.measureName = `msal.measure.${name}.${this.correlationId}`;\n        this.startMark = `msal.start.${name}.${this.correlationId}`;\n        this.endMark = `msal.end.${name}.${this.correlationId}`;\n    }\n\n    static supportsBrowserPerformance(): boolean {\n        return typeof window !== \"undefined\" &&\n            typeof window.performance !== \"undefined\" &&\n            typeof window.performance.mark === \"function\" && \n            typeof window.performance.measure === \"function\" &&\n            typeof window.performance.clearMarks === \"function\" &&\n            typeof window.performance.clearMeasures === \"function\" &&\n            typeof window.performance.getEntriesByName === \"function\";\n    }\n\n    startMeasurement(): void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.startMark);\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    endMeasurement():void {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                window.performance.mark(this.endMark);\n                window.performance.measure(this.measureName, this.startMark, this.endMark);\n            } catch (e) {\n                // Silently catch\n            }\n        }\n    }\n\n    flushMeasurement(): number | null {\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\n            try {\n                const entriesForMeasurement = window.performance.getEntriesByName(this.measureName, \"measure\");\n                if (entriesForMeasurement.length > 0) {\n                    const durationMs = entriesForMeasurement[0].duration;\n                    window.performance.clearMeasures(this.measureName);\n                    window.performance.clearMarks(this.startMark);\n                    window.performance.clearMarks(this.endMark);\n                    return durationMs;\n                }\n            } catch (e) {\n                // Silently catch and return null\n            }\n        }\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}