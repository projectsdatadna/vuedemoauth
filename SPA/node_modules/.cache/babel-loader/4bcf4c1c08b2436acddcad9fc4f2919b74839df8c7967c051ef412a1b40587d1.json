{"ast":null,"code":"/*! @azure/msal-common v8.0.0 2022-11-07 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\nvar InteractionRequiredServerErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nvar InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\r\n * Interaction required errors defined by the SDK\r\n */\nvar InteractionRequiredAuthErrorMessage = {\n  noTokensFoundError: {\n    code: \"no_tokens_found\",\n    desc: \"No refresh token found in the cache. Please sign-in.\"\n  },\n  native_account_unavailable: {\n    code: \"native_account_unavailable\",\n    desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n  }\n};\n/**\r\n * Error thrown when user interaction is required.\r\n */\nvar InteractionRequiredAuthError = /** @class */function (_super) {\n  __extends(InteractionRequiredAuthError, _super);\n  function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\n    var _this = _super.call(this, errorCode, errorMessage, subError) || this;\n    _this.name = \"InteractionRequiredAuthError\";\n    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\n    return _this;\n  }\n  /**\r\n   * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n   * @param errorCode\r\n   * @param errorString\r\n   * @param subError\r\n   */\n  InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\n    var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some(function (irErrorCode) {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  };\n  /**\r\n   * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n   */\n  InteractionRequiredAuthError.createNoTokensFoundError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n  };\n  /**\r\n   * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\r\n   * @returns\r\n   */\n  InteractionRequiredAuthError.createNativeAccountUnavailableError = function () {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n  };\n  return InteractionRequiredAuthError;\n}(AuthError);\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage };","map":{"version":3,"mappings":";;;;;;AAAA;;;AAGG;AAIH;;AAEG;AACU,yCAAqC,GAAG,CACjD,sBAAsB,EACtB,kBAAkB,EAClB,gBAAgB;AAGP,0CAAsC,GAAG,CAClD,cAAc,EACd,mBAAmB,EACnB,cAAc,EACd,uBAAuB,EACvB,kBAAkB;AAGtB;;AAEG;AACU,uCAAmC,GAAG;EAC/CA,kBAAkB,EAAE;IAChBC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACT;EACDC,0BAA0B,EAAE;IACxBF,IAAI,EAAE,4BAA4B;IAClCC,IAAI,EAAE;EACT;;AAGL;;AAEG;AACH;EAAkDE,SAAS;EAEvD,sCAAYC,SAAkB,EAAEC,YAAqB,EAAEC,QAAiB;IAAxE,YACIC,kBAAMH,SAAS,EAAEC,YAAY,EAAEC,QAAQ,CAAC,IAI3C;IAHGE,KAAI,CAACC,IAAI,GAAG,8BAA8B;IAE1CC,MAAM,CAACC,cAAc,CAACH,KAAI,EAAEI,4BAA4B,CAACC,SAAS,CAAC;;;EAGvE;;;;;AAKG;EACID,uDAA0B,GAAjC,UAAkCR,SAAkB,EAAEU,WAAoB,EAAER,QAAiB;IACzF,IAAMS,8BAA8B,GAAG,CAAC,CAACX,SAAS,IAAIY,qCAAqC,CAACC,OAAO,CAACb,SAAS,CAAC,GAAG,CAAC,CAAC;IACnH,IAAMc,6BAA6B,GAAG,CAAC,CAACZ,QAAQ,IAAIa,sCAAsC,CAACF,OAAO,CAACX,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjH,IAAMc,8BAA8B,GAAG,CAAC,CAACN,WAAW,IAAIE,qCAAqC,CAACK,IAAI,CAAC,UAACC,WAAW;MAC3G,OAAOR,WAAW,CAACG,OAAO,CAACK,WAAW,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC;IAEF,OAAOP,8BAA8B,IAAIK,8BAA8B,IAAIF,6BAA6B;GAC3G;EAED;;AAEG;EACIN,qDAAwB,GAA/B;IACI,OAAO,IAAIA,4BAA4B,CAACW,mCAAmC,CAACxB,kBAAkB,CAACC,IAAI,EAAEuB,mCAAmC,CAACxB,kBAAkB,CAACE,IAAI,CAAC;GACpK;EAED;;;AAGG;EACIW,gEAAmC,GAA1C;IACI,OAAO,IAAIA,4BAA4B,CAACW,mCAAmC,CAACrB,0BAA0B,CAACF,IAAI,EAAEuB,mCAAmC,CAACrB,0BAA0B,CAACD,IAAI,CAAC;GACpL;EACL,OAACW;AAAD,CAvCA,CAAkDY,SAAS,CAuC1D","names":["noTokensFoundError","code","desc","native_account_unavailable","__extends","errorCode","errorMessage","subError","_super","_this","name","Object","setPrototypeOf","InteractionRequiredAuthError","prototype","errorString","isInteractionRequiredErrorCode","InteractionRequiredServerErrorMessage","indexOf","isInteractionRequiredSubError","InteractionRequiredAuthSubErrorMessage","isInteractionRequiredErrorDesc","some","irErrorCode","InteractionRequiredAuthErrorMessage","AuthError"],"sources":["C:\\Azure\\gitauthdemo\\ms-identity-javascript-react-tutorial\\3-Authorization-II\\2-call-api-b2c\\SPA\\node_modules\\@azure\\msal-common\\src\\error\\InteractionRequiredAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    \"interaction_required\",\n    \"consent_required\",\n    \"login_required\"\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\"\n];\n\n/**\n * Interaction required errors defined by the SDK\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: \"no_tokens_found\",\n        desc: \"No refresh token found in the cache. Please sign-in.\"\n    },\n    native_account_unavailable: {\n        code: \"native_account_unavailable\",\n        desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n    }\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\n        super(errorCode, errorMessage, subError);\n        this.name = \"InteractionRequiredAuthError\";\n\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n    }\n\n    /**\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\n     * @param errorCode \n     * @param errorString \n     * @param subError \n     */\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string): boolean {\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n    }\n\n    /**\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\n     */\n    static createNoTokensFoundError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n    }\n\n    /**\n     * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\n     * @returns \n     */\n    static createNativeAccountUnavailableError(): InteractionRequiredAuthError {\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}