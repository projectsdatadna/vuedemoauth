{"ast":null,"code":"var _jsxFileName = \"C:\\\\Azure\\\\gitauthdemo\\\\ms-identity-javascript-react-tutorial\\\\3-Authorization-II\\\\2-call-api-b2c\\\\SPA\\\\src\\\\pages\\\\TodoList.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { MsalAuthenticationTemplate } from '@azure/msal-react';\nimport { InteractionType } from '@azure/msal-browser';\nimport { ListView } from '../components/ListView';\nimport { loginRequest, protectedResources } from \"../authConfig\";\nimport useFetchWithMsal from '../hooks/useFetchWithMsal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoListContent = () => {\n  _s();\n  const {\n    error,\n    execute\n  } = useFetchWithMsal({\n    scopes: protectedResources.apiTodoList.scopes.read\n  });\n  const [todoListData, setTodoListData] = useState(null);\n  useEffect(() => {\n    if (!todoListData) {\n      execute(\"GET\", protectedResources.apiTodoList.endpoint).then(response => {\n        setTodoListData(response);\n      });\n    }\n  }, [execute, todoListData]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todoListData ? /*#__PURE__*/_jsxDEV(ListView, {\n      todoListData: todoListData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this) : null\n  }, void 0, false);\n};\n\n/**\r\n * The `MsalAuthenticationTemplate` component will render its children if a user is authenticated\r\n * or attempt to sign a user in. Just provide it with the interaction type you would like to use\r\n * (redirect or popup) and optionally a request object to be passed to the login API, a component to display while\r\n * authentication is in progress or a component to display if an error occurs. For more, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\n_s(TodoListContent, \"3qNoup23oY0NWzUXggGKjZIko08=\", false, function () {\n  return [useFetchWithMsal];\n});\n_c = TodoListContent;\nexport const TodoList = () => {\n  const authRequest = {\n    ...loginRequest\n  };\n  return /*#__PURE__*/_jsxDEV(MsalAuthenticationTemplate, {\n    interactionType: InteractionType.Redirect,\n    authenticationRequest: authRequest,\n    children: /*#__PURE__*/_jsxDEV(TodoListContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_c2 = TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"TodoListContent\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["useEffect","useState","MsalAuthenticationTemplate","InteractionType","ListView","loginRequest","protectedResources","useFetchWithMsal","TodoListContent","error","execute","scopes","apiTodoList","read","todoListData","setTodoListData","endpoint","then","response","message","TodoList","authRequest","Redirect"],"sources":["C:/Azure/gitauthdemo/ms-identity-javascript-react-tutorial/3-Authorization-II/2-call-api-b2c/SPA/src/pages/TodoList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { MsalAuthenticationTemplate } from '@azure/msal-react';\r\nimport { InteractionType } from '@azure/msal-browser';\r\n\r\nimport { ListView } from '../components/ListView';\r\nimport { loginRequest, protectedResources } from \"../authConfig\";\r\nimport useFetchWithMsal from '../hooks/useFetchWithMsal';\r\n\r\nconst TodoListContent = () => {\r\n    const { error, execute } = useFetchWithMsal({\r\n        scopes: protectedResources.apiTodoList.scopes.read,\r\n    });\r\n\r\n    const [todoListData, setTodoListData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!todoListData) {\r\n            execute(\"GET\", protectedResources.apiTodoList.endpoint).then((response) => {\r\n                setTodoListData(response);\r\n            });\r\n        }\r\n    }, [execute, todoListData])\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    }\r\n\r\n    return <>{todoListData ? <ListView todoListData={todoListData} /> : null}</>;\r\n};\r\n\r\n/**\r\n * The `MsalAuthenticationTemplate` component will render its children if a user is authenticated\r\n * or attempt to sign a user in. Just provide it with the interaction type you would like to use\r\n * (redirect or popup) and optionally a request object to be passed to the login API, a component to display while\r\n * authentication is in progress or a component to display if an error occurs. For more, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-react/docs/getting-started.md\r\n */\r\nexport const TodoList = () => {\r\n    const authRequest = {\r\n        ...loginRequest,\r\n    };\r\n\r\n    return (\r\n        <MsalAuthenticationTemplate \r\n            interactionType={InteractionType.Redirect} \r\n            authenticationRequest={authRequest}\r\n        >\r\n            <TodoListContent />\r\n        </MsalAuthenticationTemplate>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,0BAA0B,QAAQ,mBAAmB;AAC9D,SAASC,eAAe,QAAQ,qBAAqB;AAErD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,eAAe;AAChE,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC;AAAA;AAEzD,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGH,gBAAgB,CAAC;IACxCI,MAAM,EAAEL,kBAAkB,CAACM,WAAW,CAACD,MAAM,CAACE;EAClD,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACc,YAAY,EAAE;MACfJ,OAAO,CAAC,KAAK,EAAEJ,kBAAkB,CAACM,WAAW,CAACI,QAAQ,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACvEH,eAAe,CAACG,QAAQ,CAAC;MAC7B,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACR,OAAO,EAAEI,YAAY,CAAC,CAAC;EAE3B,IAAIL,KAAK,EAAE;IACP,oBAAO;MAAA,sBAAaA,KAAK,CAACU,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO;EAC5C;EAEA,oBAAO;IAAA,UAAGL,YAAY,gBAAG,QAAC,QAAQ;MAAC,YAAY,EAAEA;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,GAAG;EAAI,iBAAI;AAChF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AANA,GAtBMN,eAAe;EAAA,QACUD,gBAAgB;AAAA;AAAA,KADzCC,eAAe;AA6BrB,OAAO,MAAMY,QAAQ,GAAG,MAAM;EAC1B,MAAMC,WAAW,GAAG;IAChB,GAAGhB;EACP,CAAC;EAED,oBACI,QAAC,0BAA0B;IACvB,eAAe,EAAEF,eAAe,CAACmB,QAAS;IAC1C,qBAAqB,EAAED,WAAY;IAAA,uBAEnC,QAAC,eAAe;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACM;AAErC,CAAC;AAAC,MAbWD,QAAQ;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}