{"ast":null,"code":"/*! @azure/msal-common v8.0.0 2022-11-07 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */\nvar TokenCacheContext = /** @class */function () {\n  function TokenCacheContext(tokenCache, hasChanged) {\n    this.cache = tokenCache;\n    this.hasChanged = hasChanged;\n  }\n  Object.defineProperty(TokenCacheContext.prototype, \"cacheHasChanged\", {\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\n    get: function () {\n      return this.hasChanged;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TokenCacheContext.prototype, \"tokenCache\", {\n    /**\r\n     * function to retrieve the token cache\r\n     */\n    get: function () {\n      return this.cache;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return TokenCacheContext;\n}();\nexport { TokenCacheContext };","map":{"version":3,"mappings":";;;AAAA;;;AAGG;AAIH;;;;AAGG;EAUC,SAAYA,4BAAmC,EAAEC,UAAmB;IAChE,IAAI,CAACC,KAAK,GAAGC,UAAU;IACvB,IAAI,CAACF,UAAU,GAAGA,UAAU;;EAMhCG,sBAAIJ,iBAAe;IAHnB;;AAEG;IACHK;MACI,OAAO,IAAI,CAACJ,UAAU;KACzB;;;EAAA;EAKDG,sBAAIJ,iBAAU;IAHd;;AAEG;IACHK;MACI,OAAO,IAAI,CAACH,KAAK;KACpB;;;EAAA;EACL,OAACF;AAAD,CAAC","names":["TokenCacheContext","hasChanged","cache","tokenCache","Object","get"],"sources":["C:\\Azure\\gitauthdemo\\ms-identity-javascript-react-tutorial\\3-Authorization-II\\2-call-api-b2c\\SPA\\node_modules\\@azure\\msal-common\\src\\cache\\persistence\\TokenCacheContext.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}